{:simlayers {
             :semicolon-mode {:key :semicolon}
             ; :space-mode {:key :spacebar}
             :backslash-mode {:key :backslash}}
  :devices {
            :masterkeys [{:vendor_id 9494 :product_id 60}]
            :superlight [{:vendor_id 1133 :product_id 50509}]
            :tmkb [{:vendor_id 6700 :product_id 39941}]
            :cherry_leipzig [{:vendor_id 1130 :product_id 275}]
            :mage [{:vendor_id 12815 :product_id 20565}]}
 :main
 [
  {:des "fn to Ctrl" :rules [[:fn :left_control]]}
  {:des "Caps Lock to Esc if alone, else Ctrl" :rules [[:##caps_lock :left_control nil {:alone :escape}]]}
  {:des "semicolon mode"
    :rules [
            [:a :!O1 :semicolon-mode]
            [:s :!O2 :semicolon-mode]
            [:d :!O3 :semicolon-mode]
            [:f :!O4 :semicolon-mode]]}
  ; {:des "space mode -- Use sdfg as arrow keys when baskslash key is held down"
  ;   :rules [
  ;           [:h :left_arrow :space-mode]
  ;           [:j :down_arrow :space-mode]
  ;           [:k :up_arrow :space-mode]
  ;           [:l :right_arrow :space-mode]]}

    ;; !  | means mandatory
    ;; #  | means optional
    ;; C  | left_command
    ;; T  | left_control
    ;; O  | left_option
    ;; S  | left_shift
    ;; F  | fn
    ;; Q  | right_command
    ;; W  | right_control
    ;; E  | right_option
    ;; R  | right_shift
    ;; P  | caps_lock
    ;; !! | mandatory command + control + optional + shift (hyper)
    ;; ## | optional any

  ; Make side buttons behave normally
  ; {:des "Backwards" :rules [[{:pkey :button4} :!Copen_bracket ]]}
  ; {:des "Forwards" :rules [[{:pkey :button5} :!Cclose_bracket ]]}

  ; For windows keyboards
  {:des "Don't ask (makes (`~) work)" :rules [[:grave_accent_and_tilde :non_us_backslash :mage]]}
  ; Needs to be left_option for rcmd to work
  {:des "Left Cmd to Left Opt" :rules [[:##left_command :left_option :mage]]}
  {:des "Left Opt to Left Cmd" :rules [[:##left_option :left_command :mage]]}
  {:des "Right Cmd to Right Opt" :rules [[:##right_command :right_option :mage]]}
  {:des "Right Opt to Right Cmd" :rules [[:##right_option :right_command :mage]]}
  {:des "Right Ctrl to Left Opt" :rules [[:##right_control :left_option :mage]]}
  {:des "Escape to tilde/backticks" :rules [[:##escape :non_us_backslash :mage]]}

  ; Leipzig Cherry Keyboard

  {:des "Don't ask (makes (`~) work)" :rules [[:##grave_accent_and_tilde :non_us_backslash :cherry_leipzig]]}
  ; Needs to be left_option for rcmd to work
  {:des "Left Cmd to Left Opt" :rules [[:##left_command :left_option :cherry_leipzig]]}
  {:des "Left Opt to Left Cmd" :rules [[:##left_option :left_command :cherry_leipzig]]}
  {:des "Right Cmd to Right Opt" :rules [[:##right_command :right_option :cherry_leipzig]]}
  {:des "Right Opt to Right Cmd" :rules [[:##right_option :right_command :cherry_leipzig]]}
  {:des "Right Ctrl to Left Opt" :rules [[:##right_control :left_option :cherry_leipzig]]}
 ]
}
